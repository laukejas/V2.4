[include shell_command.cfg]
[include moonraker_obico_macros.cfg]
[include mainsail.cfg]
[include movement_macros.cfg]
[include stealthburner_leds.cfg]
[include tones.cfg]
[include calibration_macros.cfg]
[include adaptive_bed_mesh.cfg]
[include IS_shaper_calibrate.cfg]
[include IS_vibrations_measurement.cfg]
[include config_backup.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_400043000451303431333234-if00
restart_method: command

[mcu can0]
canbus_uuid: afac3c9694c2 # run the following command to locate the uuid >   ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0

[temperature_sensor CANBOARD]
sensor_type: temperature_mcu
sensor_mcu: can0

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 4500            #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[input_shaper]
shaper_freq_x: 48.4  # frequency for the X mark of the test model 50
shaper_freq_y: 35.0  # frequency for the Y mark of the test model 60
shaper_type: mzv

[idle_timeout]
timeout: 600
gcode:
  OFF

[gcode_shell_command plot_graph]
command: bash /home/pi/printer_data/config/scripts/plot_graphs.sh
timeout: 500.0
verbose: True

#####################################################################
#   Routine settings
#####################################################################

[safe_z_home]
home_xy_position: 175, 175
speed: 100
z_hop: 5

[bed_mesh]
speed: 300
horizontal_move_z: 1
mesh_min: 10, 10
mesh_max: 340,340
fade_start: 0.6
fade_end: 10.0
probe_count: 9,9
algorithm: bicubic

[quad_gantry_level]
speed: 300
horizontal_move_z: 5
retries: 10
retry_tolerance: 0.005
max_adjust: 10
gantry_corners:
   -60,-10
   410,420
#  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#####################################################################
#   Toolhead
#####################################################################

[board_pins EBB36_G0B1_v1.2] 
mcu: can0
aliases:
aliases_step:
    EXT_EN=PD2,EXT_STEP=PD0,EXT_DIR=PD1,EXT_UART=PA15
aliases_limitsw: # these are preferred for endstops (including klicky)
    PROBE_PIN=PB6,Y_ENDSTOP_PIN=PB5
aliases_bltouch: # these are the dupont connectors for bltouch
    #PROBE_1=PB9,PROBE_2=PB8
aliases_fans:
    FAN0=PA0,FAN1=PA1
aliases_thermistors:
    TH0=PA3,PT100_CS=PA4,PT100_SCLK=PA5,PT100_MISO=PA6,PT100_MOSI=PA7
aliases_heaters:
    HE0=PB13
aliases_rgb:
    RGBLED=PD3
aliases_adxl:
    ADXL_CS=PB12,ADXL_SCLK=PB10,ADXL_MISO=PB2,ADXL_MOSI=PB11
aliases_i2c:
    AUX0=PB3,AUX1=PB4

## ADXL345
[adxl345]
cs_pin: can0:ADXL_CS
spi_software_sclk_pin: can0:ADXL_SCLK
spi_software_mosi_pin: can0:ADXL_MOSI
spi_software_miso_pin: can0:ADXL_MISO
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    175,175,20  # an example for a 350mm printer

#####################################################################
#   Motors
#####################################################################

[extruder]
step_pin: can0:EXT_STEP
dir_pin: can0:EXT_DIR
enable_pin: !can0:EXT_EN
rotation_distance: 22.933       #21.78        #22.67895 #for 5mm Shaft Driven Bondtech gearsets
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #1.8deg Motor
max_extrude_only_distance: 101 #1400.0
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 1500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: can0:HE0
sensor_pin: can0:TH0
sensor_type: ATC Semitec 104NT-4-R025H42G                
min_temp: 10
max_temp: 295
max_power: 1.0
min_extrude_temp: 170
pressure_advance: 0.04

[tmc2209 extruder]
uart_pin: can0:EXT_UART
stealthchop_threshold: 0
run_current: 0.60

[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: can0:Y_ENDSTOP_PIN
position_min: 0

position_endstop: 357
position_max: 357

homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0

position_endstop: 355
position_max: 356

homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop

position_max: 331
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PA3
sensor_type: Generic 3950
sensor_pin: PF3
max_power: 0.6
min_temp: 0
max_temp: 120

#####################################################################
#   Chamber thermistor
#####################################################################

[temperature_sensor chamber]
sensor_type: NTC 100K beta 3950
sensor_pin: PF4
min_temp: 0
max_temp: 100
gcode_id: C

#####################################################################
#   Probe
#####################################################################

[probe]
pin: ^can0:PROBE_PIN
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 3
samples: 4
sample_retract_dist: 2
lift_speed: 5.0
samples_result: median
samples_tolerance: 0.01
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: can0:FAN0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

[fan]
pin: can0:FAN1
kick_start_time: 0.25
cycle_time: 0.15
off_below: 0.10

[controller_fan controller_fan1]
pin: PD12
fan_speed: 1
kick_start_time: 0.5
heater: heater_bed

[controller_fan controller_fan2]
pin: PD13
fan_speed: 1
kick_start_time: 0.5
heater: heater_bed

[fan_generic exhaust_fan]
pin: PD14
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0

#####################################################################
#   Filament runout sensor
#####################################################################

[filament_switch_sensor switch_sensor]
switch_pin: ^PG12
pause_on_runout: True
runout_gcode:
  RESPOND MSG="Runout Detected"
insert_gcode:
  RESPOND MSG="Insert Detected"

[filament_motion_sensor encoder_sensor]
switch_pin: ^PG13
detection_length: 3 # accuracy of motion sensor 2.88mm
extruder: extruder
pause_on_runout: True
runout_gcode:
  RESPOND MSG="Jam Detected" 
insert_gcode:
  RESPOND MSG="Insert Detected"

#####################################################################
#   LED Control
#####################################################################

# RGB
[neopixel sb_leds]
pin: can0:RGBLED
chain_count: 3
color_order: GRBW
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

########################################
# Temperature monitors
########################################
[temperature_sensor rpi]
sensor_type: temperature_host

#####################################################################
#   Displays
#####################################################################

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2
encoder_steps_per_detent: 4

[neopixel btt_mini12864]
#  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 


#####################################################################
#   Misc
#####################################################################
[respond]
[pause_resume]

#####################################################################
#   Macros
#####################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0                                   ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+20} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1                           ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    #SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

# 	Filament change macro M600
[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro G32]
gcode:    
    SAVE_GCODE_STATE NAME=STATE_G32
    G90                            ; Absolute coordinates.
    G28
    QUAD_GANTRY_LEVEL
    G28 Z
    #G0 X0 Y0 Z20 F3600
    #G0 Z0.1 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    SET_NOZZLE_LEDS_ON
    STATUS_HEATING  
    M104 T0 S150
    M190 S{params.BED}  
    STATUS_HOMING
    G32                            ; home all axes, QGL
    G90                            ; absolute positioning   
    STATUS_CLEANING
    CLEAN_NOZZLE
    STATUS_HOMING
    G28 Z0
    STATUS_MESHING
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    ADAPTIVE_BED_MESH SIZE={FL_SIZE} 
    STATUS_HEATING
    M109 T0 S{params.EXTRUDER}
    STATUS_CLEANING
    CLEAN_NOZZLE
    STATUS_PRINTING
    UPDATE_DELAYED_GCODE ID=ENABLE_MOTION_SENSOR_DELAYED DURATION=60

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F1800                 ; retract filament
    
    SONG_SINGLE_BEEP
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    M84   ;turn off motorrs
    STATUS_OFF
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[delayed_gcode ENABLE_MOTION_SENSOR_DELAYED]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
# use the line below to invoke
#UPDATE_DELAYED_GCODE ID=ENABLE_MOTION_SENSOR_DELAYED DURATION=10

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[gcode_macro OFF]
gcode:
    M84                                     ; turn steppers off
    TURN_OFF_HEATERS                        ; turn bed / hotend off
    M107                                    ; turn print cooling fan off
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0      ; bed fan off
    #SET_PIN PIN=caselight VALUE=0          ; turn case light off
    SET_LOGO_LEDS_OFF
    SET_NOZZLE_LEDS_OFF
#
# Set and wait for bed temperature.
# Override to allow for heatsoaking the bed if its current temperature is below the specified threshold.
#
[gcode_macro M190]
rename_existing: M190.1

# configuration
variable_heatsoak_duration_sec: 300      # heatsoak duration in seconds, sec

gcode:
    {% set need_heatsoak = printer['heater_bed'].temperature < params.S|float  - 10 %}
    M190.1 {rawparams}
    {% if need_heatsoak %}
        {action_respond_info('Heatsoaking bed for %d seconds' % heatsoak_duration_sec)}
        G4 P{heatsoak_duration_sec*1000}
    {% endif %}

[gcode_macro PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y3 X3 F18000
    G1 Z0.2 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X100 E25 F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-60 E9 F1000    ; Print second part of the line.
    G1 E-0.5 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 308
variable_start_y: 356
variable_start_z: 5
variable_wipe_dist: -50
variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 30
variable_shift_y_bound_a: -5
variable_shift_y_bound_b: 0

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}

 G90 ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   {% set shift_y = (range(shift_y_bound_a * 10, shift_y_bound_b * 10) | random) / 10 %}
   G1 X{start_x + wipe_dist} Y{start_y + shift_y} F{wipe_spd * 60}
   G1 X{start_x} Y{start_y + shift_y} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

[gcode_macro IDLE_TIMEOUT_DEF]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT=600

[gcode_macro IDLE_TIMEOUT_INF]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT=21600

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.280
#*# pid_ki = 1.336
#*# pid_kd = 246.250
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.399
#*# pid_ki = 1.965
#*# pid_kd = 63.838
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.002500, 0.025000, 0.045000, 0.047500
#*# 	  0.001250, 0.015000, 0.023750, 0.033750
#*# 	  0.011250, 0.005625, 0.018125, 0.035625
#*# 	  0.035625, -0.001875, 0.016250, 0.043750
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 117.0
#*# max_x = 231.99
#*# min_y = 117.0
#*# max_y = 231.99
#*#
#*# [skew_correction skew_profile]
#*# xy_skew = 0.0006372810093708984
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [probe]
#*# z_offset = -1.351
